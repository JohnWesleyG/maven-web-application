pipeline{

agent any

parameters {
  choice choices: ['master', 'development', 'stage', 'uat'], description: 'Select the Branch Name', name: 'BranchName'
  string defaultValue: 'Mithun Software Solutions', name: 'PersonName'
}


tools{
maven 'maven_3.9.1'
}

options {
  buildDiscarder logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')
  timestamps()
}


triggers {
  pollSCM('* * * * * ')
}


stages{
  stage('CheckoutCode'){
  steps{
      sendSlackNotifications('STARTED')
  git credentialsId: 'd4ed318c-ffd0-4b8c-a2be-7b74dda130e3', url: 'https://github.com/JohnWesleyG/maven-web-application.git'
  }
  }

stage('Build'){
steps{
sh "mvn clean package"
}
}

//Execute SonarQube Report
stage('ExecuteSonarQubeReport'){
steps{
sh "mvn clean sonar:sonar"
}
}

//UploadArtifactsIntoNexus
stage('ArtifactsIntoNexus'){
steps{
sh "mvn clean deploy"
}
}

//DeployApplication into TOmcat Server
stage('DeploApp'){
steps{
sshagent(['28c66c08-511a-48a9-b7ee-1aa7a8252abd']) {
   sh "scp -o  StrictHostKeyChecking=no target/maven-web-application.war ec2-user@172.31.32.107:/opt/apache-tomcat-9.0.75/webapps/"
}
}
}


}//stages closing
post {
  success {
    sendSlackNotifications(currentBuild.result)
  }
  failure {
    sendSlackNotifications(currentBuild.result)
  }
}

}//pipeline closing

//Function for slack notifications
def sendSlackNotifications(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESS'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESS') {
    colorName = 'GREEN'
    colorCode = '#00FF00'
  } else {
    colorName = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary, channel: '#citibank')
}
